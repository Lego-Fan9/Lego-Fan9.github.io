name: Docker

on:
  push:
    branches: [ "**" ]
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ "**" ]
  schedule:
    - cron: '0 3 * * 1,3,5'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

    # Set IMAGE_NAME to lowercase
      - name: Set image name to lowercase
        run: |
          IMAGE_NAME=$(echo "${GITHUB_REPOSITORY}" | tr '[:upper:]' '[:lower:]')
          echo "IMAGE_NAME=$IMAGE_NAME" >> $GITHUB_ENV


      # Set up Docker BuildKit
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0

      # Log into the registry
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract Docker metadata
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@96383f45573cb7f253c731d3b3ab81c87ef81934 # v5.0.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}


      # Set Docker tags for non-main branches
      - name: Set Docker tags
        id: set-tags
        run: |
          if [[ "${GITHUB_REF##*/}" == "main" ]]; then
            echo "tags=${{ steps.meta.outputs.tags }}" >> $GITHUB_OUTPUT
          else
            BRANCH=$(echo "${GITHUB_REF##*/}" | tr '/' '-' | tr -cd '[:alnum:]-')
            echo "tags=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${BRANCH}" >> $GITHUB_OUTPUT
          fi

      # Build and push Docker image (multi-platform)
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
        with:
          context: ./discord-avatar-hash-container
          file: ./discord-avatar-hash-container/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.set-tags.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max